#! /usr/bin/python

import pygration
import pygration.load
from pygration.config import Config
import sqlalchemy
import optparse
import os.path
import sys
import types


def run_main():
    usage = "usage: %prog [options] operation migration"
    parser = optparse.OptionParser( usage=usage )
    parser.add_option( "-p", "--path" )
    parser.add_option( "-v", "--verbose" )

    opts, args = parser.parse_args()

    verbose = True
 
    if len(args) == 0:
        parser.error("A migration set must be specified")
    if len(args) == 1:
        parser.error("An operation must be specified")
    if len(args) > 2:
        parser.error("Too many arguments")

    migration = args[0]
    operation = args[1]

    path = '.'
    if opts.path:
        print "opts.path="+ opts.path
        path = opts.path

    # pygration config
    if os.path.exists('pygrate.yaml'):
        conf_file = open('pygrate.yaml')
    else:
        conf_file = ''
    # db config
    if os.path.exists('database.d/dev.yaml'):
        db_file = open('database.d/dev.yaml')
    else:
        db_file = ''
    conf = pygrate.database.Config()
    conf.load(conf_file, db_file)

    loader = pygrate.loader.PygrationLoader( path, migration )
    loader.load()

    p = Pygrator( loader.pygrations() )

    # conn = pygrate.database.open( path )
    conn = PygresqlConnection(conf.db_opts)
    try:
        db = pygrate.pygration_db.PygrationDB( conn )

        if verbose:
            print "migrate: %s" % operation
        p.migrate( db, operation )

    finally:
        conn.close()


if ( __name__ == "__main__" ):
    run_main()

