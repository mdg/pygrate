#! /usr/bin/python

import pygration
import pygration.load
from pygration.config import Config
import sqlalchemy
import optparse
import os
import os.path
import sys
import types


PATH_HELP = "path to the pygration directory"

def run_main():
    usage = "usage: %prog [options] <command>"
    parser = optparse.OptionParser( usage=usage )
    parser.add_option("-p", "--path", help=PATH_HELP)
    parser.add_option("-e", "--env")
    parser.add_option( "-v", "--verbose" )

    opts, args = parser.parse_args()

    opts.verbose = True
 
    if len(args) == 0:
        parser.error("A command must be specified")
    if len(args) > 1:
        parser.error("Too many arguments")

    command = args[0]

    path = '.'
    if opts.path:
        print "opts.path="+ opts.path
        path = opts.path

    config_path = os.path.join(path, 'conf.d')
    conf_files = os.listdir(config_path)
    print "ls %s\n%s" % (config_path, conf_files)
    config_selection = pygration.load.select_config(conf_files, opts.env)
    config_selection = os.path.join(config_path, config_selection)
    print "selected config file: %s" % config_selection
    # pygration config
    if os.path.exists(config_selection):
        if opts.verbose:
            print "opening %s as conf_file" % config_selection
        conf_file = open(config_selection)
    else:
        conf_file = ''
    conf = Config()
    conf.load(conf_file)
    print "conf = %s" % conf

    # loader = pygrate.loader.PygrationLoader( path, migration )
    # loader.load()

    # p = Pygrator( loader.pygrations() )

    # conn = pygrate.database.open( path )
    # conn = PygresqlConnection(conf.db_opts)
    try:
        # db = pygrate.pygration_db.PygrationDB( conn )

        if opts.verbose:
            print "migrate: %s" % command
        # p.migrate( db, operation )

    finally:
        # conn.close()
        pass


if ( __name__ == "__main__" ):
    run_main()

