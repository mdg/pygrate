
= pygration =
Step
* An individual change to the DB.
* Overridden by users
* Includes hooks for each phase

VersionSet
* A collection of Steps that constitute a logical
  change set and can be referenced by a version number.
* Defined by a single python file containing all the Steps.
* All each Phase is run for each step in the VersionStep before moving
  on to the next Phase.

= pygration.config =
select()
* Selects a config file from a set based on options

load()
* Loads a Config for a given file

Config
* Object that holds db & environment configuration

= pygration.history =
load()
* loads a History object from the DB

History
* reports current history
* writes new history back to the DB when changes are made

= pygration.migration =
find()
* finds available VersionSets from the filesystem

Loader
* loads Steps for a given VersionSet from the filesystem

Step and VersionSet implemented here also

= pygration.migrator =
Migrator
* execute_sql()
* execute_file()
* a special migrator is used for each phase

= pygration.model =
Model code will eventually be added to allow structural changes rather than
writing direct SQL.

AddMigrator
DropMigrator
CommitDropMigrator
RollbackAddMigrator
RollbackDropMigrator
